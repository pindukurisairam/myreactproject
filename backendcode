const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const bodyParser = require('body-parser');

const app = express();

app.use(cors());
app.use(bodyParser.json());

mongoose.connect('mongodb://localhost/customers', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const customerSchema = new mongoose.Schema({
  name: String,
  email: String,
  phone: String,
});

const Customer = mongoose.model('Customer', customerSchema);

app.post('/api/customers', (req, res) => {
  const customer = new Customer({
    name: req.body.name,
    email: req.body.email,
    phone: req.body.phone,
  });

  customer.save((err, result) => {
    if (err) {
      console.log(err);
      res.sendStatus(500);
    } else {
      res.send(result);
    }
  });
});

app.get('/api/customers', (req, res) => {
  Customer.find({}, (err, customers) => {
    if (err) {
      console.log(err);
      res.sendStatus(500);
    } else {
      res.send(customers);
    }
  });
});

app.put('/api/customers/:id', (req, res) => {
  Customer.findByIdAndUpdate(
    req.params.id,
    {
      name: req.body.name,
      email: req.body.email,
      phone: req.body.phone,
    },
    (err, result) => {
      if (err) {
        console.log(err);
        res.sendStatus(500);
      } else {
        res.send(result);
      }
    }
  );
});

app.delete('/api/customers/:id', (req, res) => {
  Customer.findByIdAndDelete(req.params.id, (err, result) => {
    if (err) {
      console.log(err);
      res.sendStatus(500);
    } else {
      res.send(result);
    }
  });
});

app.listen(3001, () => {
  console.log('Server started on port 3001');
});